#!/bin/sh

echo "üîß commit-msg hook triggered" >&2

commit_msg_file=$1
commit_msg=$(cat "$commit_msg_file")

# Get current branch name
branch_name=$(git rev-parse --abbrev-ref HEAD)

# Allowed commit types
valid_types="feat|fix|chore|refactor"

# Jira key pattern: ALPHANUMERIC + dash + DIGITS
jira_key_pattern="[A-Za-z0-9]+-[0-9]+"

# Branch name pattern: type/JIRA-KEY
branch_pattern="^($valid_types)/($jira_key_pattern)$"

# Validate branch name
if ! echo "$branch_name" | grep -qE "$branch_pattern"; then
  echo "‚ùå ERROR: Invalid branch name: $branch_name"
  echo "‚û°Ô∏è  Branch names must follow the pattern: [feat|fix|chore|refactor]/[JIRA-KEY]"
  echo "‚û°Ô∏è  Examples: feat/SUW-1234, fix/ABC-5678, chore/XYZ-999"
  exit 1
fi

# Validate commit message format: type(JIRA-KEY): description
commit_pattern="^($valid_types)\(($jira_key_pattern)\): .+"

if ! echo "$commit_msg" | grep -qE "$commit_pattern"; then
  echo "‚ùå ERROR: Invalid commit message format"
  echo "‚û°Ô∏è  Required format: <type>(<JIRA-KEY>): <description>"
  echo "‚û°Ô∏è  Valid types: feat | fix | chore | refactor"
  echo "‚û°Ô∏è  Examples:"
  echo "    ‚úÖ feat(SUW-1234): Add user authentication"
  echo "    ‚úÖ fix(ABC-5678): Correct input validation"
  echo "    ‚úÖ chore(XYZ-999): Update dependencies"
  echo "    ‚úÖ refactor(DEF-123): Simplify payment logic"
  exit 1
fi

exit 0